[{"/Users/camcgreen/Documents/web-dev/chatbox/src/index.js":"1","/Users/camcgreen/Documents/web-dev/chatbox/src/reportWebVitals.js":"2","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Home.js":"3","/Users/camcgreen/Documents/web-dev/chatbox/src/components/UserAuthentication.js":"4","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Login.js":"5","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Signup.js":"6","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Dashboard.js":"7","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Navbar.js":"8","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatNavigation.js":"9","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatMain.js":"10","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Sidebar.js":"11","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatInput.js":"12","/Users/camcgreen/Documents/web-dev/chatbox/src/components/NewChat.js":"13"},{"size":1698,"mtime":1612005239015,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1612005239015,"results":"16","hashOfConfig":"15"},{"size":3127,"mtime":1612098249948,"results":"17","hashOfConfig":"15"},{"size":305,"mtime":1612005239008,"results":"18","hashOfConfig":"15"},{"size":2327,"mtime":1612005239007,"results":"19","hashOfConfig":"15"},{"size":4762,"mtime":1612005239008,"results":"20","hashOfConfig":"15"},{"size":6882,"mtime":1612025909067,"results":"21","hashOfConfig":"15"},{"size":7825,"mtime":1612098401928,"results":"22","hashOfConfig":"15"},{"size":3694,"mtime":1612026406480,"results":"23","hashOfConfig":"15"},{"size":6636,"mtime":1612027936441,"results":"24","hashOfConfig":"15"},{"size":315,"mtime":1612005679092,"results":"25","hashOfConfig":"15"},{"size":5219,"mtime":1612025945101,"results":"26","hashOfConfig":"15"},{"size":2677,"mtime":1612007122129,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"afae6t",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},"/Users/camcgreen/Documents/web-dev/chatbox/src/index.js",["61","62","63"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport \"./main.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport UserAuthentication from \"./components/UserAuthentication\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBLPfFC6AT9gHnm4rLP4qJPefL2IP2t3Wk\",\n  authDomain: \"chatbox-7b75a.firebaseapp.com\",\n  projectId: \"chatbox-7b75a\",\n  storageBucket: \"chatbox-7b75a.appspot.com\",\n  messagingSenderId: \"1068497569992\",\n  appId: \"1:1068497569992:web:cd34fe942f7f080087bdfd\",\n});\n\nlet initialLoaded = false;\n\nconst routing = (\n  <BrowserRouter>\n    <div id=\"routing-container\">\n      {/* <Switch> */}\n      <div className=\"user-authentication-container\">\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/signup\" component={Signup}></Route>\n      </div>\n      <div className=\"dashboard-container\">\n        <Route path=\"/dashboard\" component={Dashboard}></Route>\n      </div>\n      {/* </Switch> */}\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>{routing}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["64","65"],"/Users/camcgreen/Documents/web-dev/chatbox/src/reportWebVitals.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Home.js",["66"],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/UserAuthentication.js",["67"],"import React from \"react\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\n// import \"./main.scss\";\nconst firebase = require(\"firebase\");\n\nclass UserAuthentication extends React.Component {\n  render() {\n    return <div>UserAuthentication</div>;\n  }\n}\n\nexport default UserAuthentication;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Login.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Signup.js",["68"],"import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Link } from \"react-router-dom\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\n// import \"./main.scss\";\nconst firebase = require(\"firebase\");\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      nickname: null,\n      signupError: \"\",\n    };\n  }\n  render() {\n    return (\n      <>\n        <Navbar />\n        <div className=\"authentication\">\n          <h1 className=\"authentication__h1\">Sign up</h1>\n          <form\n            className=\"authentication__form\"\n            onSubmit={(e) => this.submitSignup(e)}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              autoFocus\n              onChange={(e) => this.handleUserInput(\"email\", e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => this.handleUserInput(\"password\", e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"confirm password\"\n              onChange={(e) => this.handleUserInput(\"passwordConfirmation\", e)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"nickname\"\n              onChange={(e) => this.handleUserInput(\"nickname\", e)}\n            />\n            <h4 className=\"error-text\">\n              {this.state.signupError ? this.state.signupError : null}\n            </h4>\n            <button className=\"authentication__form__submit btn btn--submit\">\n              Sign up\n            </button>\n          </form>\n          <h5 className=\"account\">\n            Already have an account?{\" \"}\n            <Link\n              to=\"/login\"\n              className=\"account__link\"\n              // style={{ textDecoration: \"none\", color: \"#6937FF\" }}\n            >\n              Login\n            </Link>\n          </h5>\n        </div>\n      </>\n    );\n  }\n  checkNicknameValid = (nickname) => {\n    const regex = /^[a-zA-Z]+$/;\n    return regex.test(nickname);\n  };\n  formIsValid = () =>\n    this.state.password === this.state.passwordConfirmation &&\n    this.state.email !== null &&\n    this.state.password !== null &&\n    this.state.passwordConfirmation !== null &&\n    this.state.nickname !== null &&\n    this.checkNicknameValid(this.state.nickname);\n  handleUserInput = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n      case \"nickname\":\n        this.setState({ nickname: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formIsValid()) {\n      switch (true) {\n        case this.state.email === null:\n          this.setState({ signupError: \"You must enter an email address\" });\n          return;\n        case this.state.password === null:\n          this.setState({ signupError: \"You must enter a password\" });\n          return;\n        case this.state.password !== this.state.passwordConfirmation:\n          this.setState({ signupError: \"Passwords do not match\" });\n          return;\n        case this.state.nickname === null:\n          this.setState({ signupError: \"You must enter a nickname\" });\n          return;\n        case !this.checkNicknameValid(this.state.nickname):\n          this.setState({ signupError: \"Nickname must only include letters.\" });\n          return;\n      }\n      return;\n    }\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        this.state.email.toLowerCase(),\n        this.state.password\n      )\n      .then(\n        (authRes) => {\n          const userObj = {\n            email: authRes.user.email,\n            // firstName: this.state.firstName,\n            // lastName: this.state.lastName,\n            nickname: this.state.nickname,\n            lastLoggedOut: null,\n            online: false,\n          };\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.state.email.toLowerCase())\n            .set(userObj)\n            .then(\n              async () => {\n                this.props.history.push(\"/dashboard\");\n              },\n              (dbError) => {\n                this.setState({ signupError: \"Failed to add user\" });\n              }\n            );\n        },\n        (authError) => {\n          this.setState({ signupError: authError.message });\n        }\n      );\n  };\n}\n\nexport default Signup;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Dashboard.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Navbar.js",["69"],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatNavigation.js",["70"],"import React from \"react\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\nimport \"../main.scss\";\nimport \"./ChatNavigation.scss\";\nconst firebase = require(\"firebase\");\n\nclass ChatNavigation extends React.Component {\n  render() {\n    const chatsToOrder = [...this.props.chats];\n    const orderedChats = chatsToOrder.sort(\n      (a, b) =>\n        b.messages[b.messages.length - 1].timestamp -\n        a.messages[a.messages.length - 1].timestamp\n    );\n    if (this.props.chats.length > 0) {\n      return (\n        <div\n          className=\"chat-navigation\"\n          // style={{ zIndex: this.props.zIndexValue }}\n          style={{ left: this.props.leftValue }}\n        >\n          <main className=\"chat-navigation__section\">\n            <ul className=\"chat-navigation__section__chats\">\n              {orderedChats.map((chat, index) => {\n                return (\n                  <li\n                    key={index}\n                    className=\"chat-navigation__section__chats__chat\"\n                    // onClick={() => this.selectChat(index)}\n                    onClick={() =>\n                      this.selectChat(\n                        this.props.chats.findIndex(\n                          (element) => element === orderedChats[index]\n                        )\n                      )\n                    }\n                  >\n                    <div\n                      className=\"chat_navigation__section__chats__chat__avatar\"\n                      style={{\n                        fontWeight:\n                          !chat.receiverHasRead && !this.userSentMessage(chat)\n                            ? 700\n                            : 400,\n                      }}\n                    >\n                      {\n                        // chat.users\n                        //   .filter((user) => user !== this.props.email)[0]\n                        //   .split(\"\")[0]\n                        chat.users.filter(\n                          (user) => user !== this.props.email\n                        )[0]\n                      }\n                    </div>\n                    <div className=\"chat-navigation__section__chats__chat__message\">\n                      <>\n                        {/* {chat.messages[\n                          chat.messages.length - 1\n                        ].message.substring(0, 30)} */}\n                        {chat.messages[chat.messages.length - 1].message !==\n                        null\n                          ? chat.messages[\n                              chat.messages.length - 1\n                            ].message.substring(0, 30)\n                          : \"GIF\"}\n                      </>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            <button className=\"btn btn--new-chat\" onClick={this.newChat}>\n              New chat\n            </button>\n          </main>\n          {/* <button\n            className=\"chat-navigation__toggle-nav\"\n            onClick={this.props.toggleNav}\n          >\n            Go to ChatMain\n          </button> */}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chat-navigation\">\n          <main className=\"chat-navigation__section\">\n            <button className=\"btn btn--new-chat\" onClick={this.newChat}>\n              New chat\n            </button>\n          </main>\n        </div>\n      );\n    }\n  }\n  newChat = () => {\n    this.props.newChat();\n  };\n  selectChat = (index) => {\n    this.props.selectChat(index);\n    this.props.toggleNav();\n  };\n  userSentMessage = (chat) =>\n    chat.messages[chat.messages.length - 1].sender === this.props.email;\n}\n\nexport default ChatNavigation;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatMain.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Sidebar.js",["71"],"import React from \"react\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\nimport \"../main.scss\";\nimport \"./Sidebar.scss\";\nconst firebase = require(\"firebase\");\n\nclass Sidebar extends React.Component {\n  render() {\n    return <div className=\"sidebar\">Sidebar</div>;\n  }\n}\n\nexport default Sidebar;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatInput.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/NewChat.js",["72"],"import React from \"react\";\nconst firebase = require(\"firebase\");\n\nclass NewChat extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null,\n      newChatError: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"new-chat\">\n        <h1 className=\"new-chat__h1\">Start a new chat</h1>\n        <form className=\"new-chat__form\" onSubmit={this.handleFormSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"friend's email\"\n            onChange={(e) => this.handleUserInput(\"email\", e)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"enter your message...\"\n            onChange={(e) => this.handleUserInput(\"message\", e)}\n          />\n          <h4 className=\"error-text\">\n            {this.state.newChatError ? this.state.newChatError : null}\n          </h4>\n          <button className=\"btn\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n  handleUserInput = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n    }\n  };\n  handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const userExists = await this.checkUserExists();\n    const messageValid = this.messageValid(this.state.message);\n    if (userExists) {\n      if (messageValid) {\n        const chatExists = await this.checkChatExists();\n        chatExists ? this.navigateToChat() : this.createNewChat();\n      } else {\n        this.setState({ newChatError: \"Cannot send an empty message.\" });\n      }\n    } else {\n      this.setState({ newChatError: \"User does not exist.\" });\n    }\n  };\n  messageValid = (text) => text && text.replace(/\\s/g, \"\").length;\n  navigateToChat = () =>\n    this.props.navigateToChat(this.buildDocKey(), this.state.message);\n  createNewChat = () => {\n    this.props.createNewChat({\n      sendTo: this.state.email,\n      message: this.state.message,\n    });\n  };\n  buildDocKey = () => {\n    return [firebase.auth().currentUser.email, this.state.email]\n      .sort()\n      .join(\":\");\n  };\n  checkChatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  checkUserExists = async () => {\n    const snapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = snapshot.docs\n      .map((_doc) => _doc.data().email)\n      .includes(this.state.email);\n    return exists;\n  };\n}\n\nexport default NewChat;\n",{"ruleId":"73","severity":1,"message":"74","line":6,"column":32,"nodeType":"75","messageId":"76","endLine":6,"endColumn":38},{"ruleId":"73","severity":1,"message":"77","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":26},{"ruleId":"73","severity":1,"message":"78","line":25,"column":5,"nodeType":"75","messageId":"76","endLine":25,"endColumn":18},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"73","severity":1,"message":"83","line":6,"column":7,"nodeType":"75","messageId":"76","endLine":6,"endColumn":15},{"ruleId":"73","severity":1,"message":"83","line":4,"column":7,"nodeType":"75","messageId":"76","endLine":4,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":103,"column":7,"nodeType":"86","messageId":"87","endLine":119,"endColumn":8},{"ruleId":"73","severity":1,"message":"83","line":6,"column":7,"nodeType":"75","messageId":"76","endLine":6,"endColumn":15},{"ruleId":"73","severity":1,"message":"83","line":5,"column":7,"nodeType":"75","messageId":"76","endLine":5,"endColumn":15},{"ruleId":"73","severity":1,"message":"83","line":5,"column":7,"nodeType":"75","messageId":"76","endLine":5,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":37,"column":5,"nodeType":"86","messageId":"87","endLine":44,"endColumn":6},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'UserAuthentication' is defined but never used.","'initialLoaded' is assigned a value but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'firebase' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]