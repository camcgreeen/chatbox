[{"/Users/camcgreen/Documents/web-dev/chatbox/src/index.js":"1","/Users/camcgreen/Documents/web-dev/chatbox/src/reportWebVitals.js":"2","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Home.js":"3","/Users/camcgreen/Documents/web-dev/chatbox/src/components/UserAuthentication.js":"4","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Login.js":"5","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Signup.js":"6","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Dashboard.js":"7","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Navbar.js":"8","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatNavigation.js":"9","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatMain.js":"10","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Sidebar.js":"11","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatInput.js":"12","/Users/camcgreen/Documents/web-dev/chatbox/src/components/NewChat.js":"13","/Users/camcgreen/Documents/web-dev/chatbox/src/utilities/helpers.js":"14"},{"size":1698,"mtime":1612005239015,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1612005239015,"results":"17","hashOfConfig":"16"},{"size":12225,"mtime":1613837995966,"results":"18","hashOfConfig":"16"},{"size":305,"mtime":1612005239008,"results":"19","hashOfConfig":"16"},{"size":2391,"mtime":1613838091561,"results":"20","hashOfConfig":"16"},{"size":12637,"mtime":1613838184418,"results":"21","hashOfConfig":"16"},{"size":12198,"mtime":1613838208894,"results":"22","hashOfConfig":"16"},{"size":7825,"mtime":1612098401928,"results":"23","hashOfConfig":"16"},{"size":14579,"mtime":1613838706668,"results":"24","hashOfConfig":"16"},{"size":13568,"mtime":1613838462500,"results":"25","hashOfConfig":"16"},{"size":19270,"mtime":1613822880641,"results":"26","hashOfConfig":"16"},{"size":8216,"mtime":1613837451088,"results":"27","hashOfConfig":"16"},{"size":4056,"mtime":1613821379900,"results":"28","hashOfConfig":"16"},{"size":255,"mtime":1613837994686,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"afae6t",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/camcgreen/Documents/web-dev/chatbox/src/index.js",["65","66","67"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport \"./main.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport UserAuthentication from \"./components/UserAuthentication\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBLPfFC6AT9gHnm4rLP4qJPefL2IP2t3Wk\",\n  authDomain: \"chatbox-7b75a.firebaseapp.com\",\n  projectId: \"chatbox-7b75a\",\n  storageBucket: \"chatbox-7b75a.appspot.com\",\n  messagingSenderId: \"1068497569992\",\n  appId: \"1:1068497569992:web:cd34fe942f7f080087bdfd\",\n});\n\nlet initialLoaded = false;\n\nconst routing = (\n  <BrowserRouter>\n    <div id=\"routing-container\">\n      {/* <Switch> */}\n      <div className=\"user-authentication-container\">\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/signup\" component={Signup}></Route>\n      </div>\n      <div className=\"dashboard-container\">\n        <Route path=\"/dashboard\" component={Dashboard}></Route>\n      </div>\n      {/* </Switch> */}\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>{routing}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["68","69"],"/Users/camcgreen/Documents/web-dev/chatbox/src/reportWebVitals.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Home.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/UserAuthentication.js",["70"],"import React from \"react\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\n// import \"./main.scss\";\nconst firebase = require(\"firebase\");\n\nclass UserAuthentication extends React.Component {\n  render() {\n    return <div>UserAuthentication</div>;\n  }\n}\n\nexport default UserAuthentication;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Login.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Signup.js",["71"],"import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Link } from \"react-router-dom\";\nimport { disableRightMiddleClick } from \"../utilities/helpers\";\nimport \"../main.scss\";\nconst firebase = require(\"firebase\");\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      // nickname: null,\n      nameFirst: null,\n      nameLast: null,\n      signupError: \"\",\n    };\n  }\n  render() {\n    return (\n      <>\n        <Navbar />\n        <div className=\"authentication\">\n          <h1 className=\"authentication__h1\">Sign up</h1>\n          <form\n            className=\"authentication__form\"\n            onSubmit={(e) => this.submitSignup(e)}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              autoFocus\n              onChange={(e) => this.handleUserInput(\"email\", e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => this.handleUserInput(\"password\", e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"confirm password\"\n              onChange={(e) => this.handleUserInput(\"passwordConfirmation\", e)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"first name\"\n              onChange={(e) => this.handleUserInput(\"nameFirst\", e)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"last name\"\n              onChange={(e) => this.handleUserInput(\"nameLast\", e)}\n            />\n            <h4 className=\"error-text\">\n              {this.state.signupError ? this.state.signupError : null}\n            </h4>\n            <button className=\"authentication__form__submit btn btn--submit\">\n              Sign up\n            </button>\n          </form>\n          <h5 className=\"account\">\n            Already have an account?{\" \"}\n            <Link\n              to=\"/login\"\n              className=\"account__link\"\n              // style={{ textDecoration: \"none\", color: \"#6937FF\" }}\n            >\n              Login\n            </Link>\n          </h5>\n        </div>\n      </>\n    );\n  }\n  componentDidMount = () => {\n    disableRightMiddleClick();\n  };\n  checkNameValid = (name) => {\n    const regex = /^[a-zA-Z]+$/;\n    return regex.test(name);\n  };\n  formIsValid = () =>\n    this.state.password === this.state.passwordConfirmation &&\n    this.state.email !== null &&\n    this.state.password !== null &&\n    this.state.passwordConfirmation !== null &&\n    this.state.nameFirst !== null &&\n    this.state.nameSecond !== null &&\n    this.checkNameValid(this.state.nameFirst) &&\n    this.checkNameValid(this.state.nameLast);\n  handleUserInput = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n      case \"nameFirst\":\n        this.setState({ nameFirst: e.target.value });\n        break;\n      case \"nameLast\":\n        this.setState({ nameLast: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formIsValid()) {\n      switch (true) {\n        case this.state.email === null:\n          this.setState({ signupError: \"You must enter an email address\" });\n          return;\n        case this.state.password === null:\n          this.setState({ signupError: \"You must enter a password\" });\n          return;\n        case this.state.password !== this.state.passwordConfirmation:\n          this.setState({ signupError: \"Passwords do not match\" });\n          return;\n        case this.state.nameFirst === null:\n          this.setState({ signupError: \"You must enter a first name\" });\n          return;\n        case this.state.nameLast === null:\n          this.setState({ signupError: \"You must enter a last name\" });\n          return;\n        case !this.checkNameValid(this.state.nickname):\n          this.setState({ signupError: \"Nickname must only include letters.\" });\n          return;\n      }\n      return;\n    }\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        this.state.email.toLowerCase(),\n        this.state.password\n      )\n      .then(\n        (authRes) => {\n          const userObj = {\n            email: authRes.user.email,\n            // firstName: this.state.firstName,\n            // lastName: this.state.lastName,\n            // nickname: this.state.nickname,\n            nameFirst: this.state.nameFirst,\n            nameLast: this.state.nameLast,\n            lastLoggedOut: null,\n            online: false,\n            profilePictureUrl: \"https://i.imgur.com/ZtGfcXy.png\",\n          };\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.state.email.toLowerCase())\n            .set(userObj)\n            .then(\n              () => {\n                const camEmail = \"c.c.green@outlook.com\";\n                const chatCamUsers = [camEmail, this.state.email].sort();\n                const chatCamDocKey = chatCamUsers.join(\":\");\n                console.log(`chatCamDocKey = ${chatCamDocKey}`);\n                const chatCamObj = {\n                  messages: [\n                    {\n                      gifRef: null,\n                      message: \"Hey there! 👋\",\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 7,\n                    },\n                    {\n                      gifRef: null,\n                      message:\n                        \"Welcome to Chatbox, a real-time chat application built with React and Firebase\",\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 6,\n                    },\n                    {\n                      gifRef:\n                        \"https://media4.giphy.com/media/p6P5KdqRljCrVoZj79/giphy.gif?cid=054422c3eurumthxw6z3v80yrujtkke22l1c4uwyzgeqd7f3&rid=giphy.gif\",\n                      message: null,\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 5,\n                    },\n                    {\n                      gifRef: null,\n                      message: \"I'm Cam Green, the creator of this app\",\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 4,\n                    },\n                    {\n                      gifRef: null,\n                      message:\n                        \"I have included some dummy chats to show you the functionality of the app as it turns out it’s quite hard to demo a chat application without lots of users!\",\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 3,\n                    },\n                    {\n                      gifRef: null,\n                      message:\n                        \"Click on one these chats in the chat list to the side or send a nice message to a friend using their email address with the + button (the friend must also have signed up on Chatbox)\",\n\n                      sender: camEmail,\n                      timestamp: Date.now() - 60000 * 2,\n                    },\n                    {\n                      gifRef: null,\n                      message:\n                        \"Feel free to contact me right here, or on my email address mailto:hello@camgreen.works, and I will get back to you as soon as I can! 😀\",\n\n                      sender: camEmail,\n                      timestamp: Date.now(),\n                    },\n                  ],\n                  receiverHasRead: false,\n                  user1Typing: false,\n                  user2Typing: false,\n                  users: chatCamUsers,\n                };\n                console.log(\"setting up chat with Cam\", chatCamObj);\n                firebase\n                  .firestore()\n                  .collection(\"chats\")\n                  .doc(chatCamDocKey)\n                  .set({ ...chatCamObj })\n                  .then(() => {\n                    const janeEmail = \"jane.doe@gmail.com\";\n                    const chatJaneUsers = [janeEmail, this.state.email].sort();\n                    const chatJaneDocKey = chatJaneUsers.join(\":\");\n                    const chatJaneObj = {\n                      messages: [\n                        {\n                          gifRef: null,\n                          message:\n                            \"I'm here to tell you that you can send emojis with the emoji button, like this:\",\n\n                          sender: janeEmail,\n                          timestamp: Date.now() - 60000 * 23,\n                        },\n                        {\n                          gifRef: null,\n                          message: \"😁😁😁\",\n\n                          sender: janeEmail,\n                          timestamp: Date.now() - 60000 * 22,\n                        },\n                        {\n                          gifRef: null,\n                          message:\n                            \"You can send GIFs with the GIF icon button, using the Giphy API\",\n\n                          sender: janeEmail,\n                          timestamp: Date.now() - 60000 * 21,\n                        },\n                        {\n                          gifRef:\n                            \"https://media0.giphy.com/media/8Iv5lqKwKsZ2g/giphy.gif?cid=054422c3esjdb7maxup41cz0uudxss9dcpn41a9h97r4b5vu&rid=giphy.gif\",\n                          message: null,\n\n                          sender: janeEmail,\n                          timestamp: Date.now() - 60000 * 20,\n                        },\n                      ],\n                      receiverHasRead: false,\n                      user1Typing: false,\n                      user2Typing: false,\n                      users: chatJaneUsers,\n                    };\n                    firebase\n                      .firestore()\n                      .collection(\"chats\")\n                      .doc(chatJaneDocKey)\n                      .set({ ...chatJaneObj })\n                      .then(() => {\n                        const johnEmail = \"john.bellamy@gmail.com\";\n                        const chatJohnUsers = [\n                          johnEmail,\n                          this.state.email,\n                        ].sort();\n                        const chatJohnDocKey = chatJohnUsers.join(\":\");\n                        const chatJohnObj = {\n                          messages: [\n                            {\n                              gifRef: null,\n                              message:\n                                \"To show you the *other user is typing* feature, my isTyping flag has been set to true for the rest of eternity\",\n\n                              sender: johnEmail,\n                              timestamp: Date.now() - 60000 * 27,\n                            },\n                            {\n                              gifRef: null,\n                              message: \"Tiring!\",\n\n                              sender: johnEmail,\n                              timestamp: Date.now() - 60000 * 26,\n                            },\n                            {\n                              gifRef: null,\n                              message: \"Below is the typing indicator 👇\",\n\n                              sender: johnEmail,\n                              timestamp: Date.now() - 60000 * 25,\n                            },\n                          ],\n                          receiverHasRead: false,\n                          user1Typing: true,\n                          user2Typing: true,\n                          users: chatJohnUsers,\n                        };\n                        firebase\n                          .firestore()\n                          .collection(\"chats\")\n                          .doc(chatJohnDocKey)\n                          .set({ ...chatJohnObj })\n                          .then(() => {\n                            this.props.history.push(\"/dashboard\");\n                          });\n                      });\n                  });\n              },\n              (dbError) => {\n                this.setState({ signupError: \"Failed to add user\" });\n              }\n            );\n        },\n        (authError) => {\n          this.setState({ signupError: authError.message });\n        }\n      );\n  };\n}\n\nexport default Signup;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/Dashboard.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Navbar.js",["72"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\nimport \"../main.scss\";\nimport \"./Navbar.scss\";\nconst firebase = require(\"firebase\");\n\nclass Navbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      menuOpen: false,\n    };\n  }\n  render() {\n    return (\n      // <div className=\"navbar\">\n      <nav className=\"nav\">\n        <NavLink exact to=\"/\">\n          <svg\n            className=\"logo\"\n            width=\"133\"\n            height=\"31\"\n            viewBox=\"0 0 133 31\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M41.544 22.416C40.36 21.152 39.768 19.584 39.768 17.712C39.768 15.84 40.36 14.28 41.544 13.032C42.744 11.768 44.256 11.136 46.08 11.136C47.872 11.136 49.28 11.64 50.304 12.648C51.344 13.656 51.936 14.784 52.08 16.032H48.576C48.448 15.488 48.152 15.04 47.688 14.688C47.224 14.336 46.68 14.16 46.056 14.16C45.16 14.16 44.456 14.488 43.944 15.144C43.432 15.784 43.176 16.64 43.176 17.712C43.176 18.784 43.432 19.648 43.944 20.304C44.456 20.944 45.16 21.264 46.056 21.264C46.68 21.264 47.224 21.088 47.688 20.736C48.152 20.384 48.448 19.936 48.576 19.392H52.08C51.936 20.64 51.344 21.768 50.304 22.776C49.28 23.784 47.872 24.288 46.08 24.288C44.256 24.288 42.744 23.664 41.544 22.416ZM57.6321 6V12.576C58.3521 11.616 59.5121 11.136 61.1121 11.136C62.6001 11.136 63.7441 11.592 64.5441 12.504C65.3441 13.4 65.7441 14.616 65.7441 16.152V24H62.3361V16.536C62.3361 14.888 61.6241 14.064 60.2001 14.064C59.3841 14.064 58.7521 14.312 58.3041 14.808C57.8561 15.288 57.6321 15.96 57.6321 16.824V24H54.2241V6H57.6321ZM76.3393 18.336L73.3153 18.84C72.0353 19.064 71.3953 19.56 71.3953 20.328C71.3953 21.208 72.0273 21.648 73.2913 21.648C74.2673 21.648 75.0193 21.392 75.5473 20.88C76.0753 20.368 76.3393 19.688 76.3393 18.84V18.336ZM72.5233 24.288C71.1153 24.288 70.0273 23.936 69.2593 23.232C68.4913 22.528 68.1073 21.592 68.1073 20.424C68.1073 19.32 68.4993 18.44 69.2833 17.784C70.0833 17.128 71.3153 16.672 72.9793 16.416L76.3393 15.912V15.792C76.3393 14.56 75.5873 13.944 74.0833 13.944C72.6753 13.944 71.8993 14.456 71.7553 15.48H68.3953C68.5073 14.248 69.0193 13.216 69.9313 12.384C70.8433 11.552 72.2193 11.136 74.0593 11.136C75.8833 11.136 77.2593 11.544 78.1873 12.36C79.1153 13.176 79.5793 14.328 79.5793 15.816V21.744C79.5793 22.688 79.6993 23.44 79.9393 24H76.6513C76.6353 24 76.6193 23.944 76.6033 23.832C76.5873 23.72 76.5633 23.552 76.5313 23.328C76.5153 23.088 76.5073 22.848 76.5073 22.608C75.7233 23.728 74.3953 24.288 72.5233 24.288ZM88.2765 20.976V23.928C87.8925 24.024 87.3565 24.072 86.6685 24.072C84.0925 24.072 82.8045 22.792 82.8045 20.232V14.112H81.1005V11.424H82.8045V8.304H86.2125V11.424H88.3005V14.112H86.2125V19.872C86.2125 20.688 86.6365 21.096 87.4845 21.096L88.2765 20.976ZM93.7961 12.768C94.1481 12.304 94.6441 11.92 95.2841 11.616C95.9401 11.296 96.6841 11.136 97.5161 11.136C99.2921 11.136 100.7 11.76 101.74 13.008C102.78 14.256 103.3 15.824 103.3 17.712C103.3 19.6 102.78 21.168 101.74 22.416C100.7 23.664 99.2921 24.288 97.5161 24.288C95.6921 24.288 94.3641 23.68 93.5321 22.464V24H90.3881V6H93.7961V12.768ZM94.5401 15.144C93.9801 15.816 93.7001 16.672 93.7001 17.712C93.7001 18.752 93.9801 19.608 94.5401 20.28C95.1161 20.952 95.8681 21.288 96.7961 21.288C97.7241 21.288 98.4681 20.952 99.0281 20.28C99.6041 19.608 99.8921 18.752 99.8921 17.712C99.8921 16.672 99.6041 15.816 99.0281 15.144C98.4681 14.472 97.7241 14.136 96.7961 14.136C95.8681 14.136 95.1161 14.472 94.5401 15.144ZM116.207 22.392C114.991 23.656 113.399 24.288 111.431 24.288C109.463 24.288 107.871 23.656 106.655 22.392C105.439 21.112 104.831 19.552 104.831 17.712C104.831 15.872 105.439 14.32 106.655 13.056C107.871 11.776 109.463 11.136 111.431 11.136C113.399 11.136 114.991 11.776 116.207 13.056C117.423 14.32 118.031 15.872 118.031 17.712C118.031 19.552 117.423 21.112 116.207 22.392ZM109.127 15.096C108.535 15.736 108.239 16.608 108.239 17.712C108.239 18.816 108.535 19.688 109.127 20.328C109.735 20.968 110.503 21.288 111.431 21.288C112.359 21.288 113.119 20.968 113.711 20.328C114.319 19.688 114.623 18.816 114.623 17.712C114.623 16.608 114.319 15.736 113.711 15.096C113.119 14.456 112.359 14.136 111.431 14.136C110.503 14.136 109.735 14.456 109.127 15.096ZM131.533 11.424L126.853 17.616L131.677 24H127.573L124.933 20.184L122.293 24H118.189L123.013 17.616L118.333 11.424H122.437L124.933 15.024L127.429 11.424H131.533Z\"\n              fill=\"#221E41\"\n            />\n            <path\n              d=\"M19.5726 4.95891L14.6124 0L9.65207 4.95891C6.91285 7.69676 6.91285 12.1389 9.65207 14.8822C12.3913 17.6201 16.8334 17.6201 19.5726 14.8822C22.3119 12.1389 22.3119 7.69676 19.5726 4.95891Z\"\n              fill=\"url(#paint0_linear)\"\n            />\n            <path\n              d=\"M15.4805 23.9277C15.4805 27.8145 18.6306 30.9647 22.5175 30.9647H29.5545V23.9277C29.5545 20.0408 26.4044 16.8906 22.5175 16.8906C20.6813 16.8906 19.01 17.5943 17.7579 18.7433C16.3587 20.0298 15.4805 21.877 15.4805 23.9277Z\"\n              fill=\"url(#paint1_linear)\"\n            />\n            <path\n              d=\"M7.03704 30.9647C10.9239 30.9647 14.0741 27.8145 14.0741 23.9277C14.0741 20.0408 10.9239 16.8906 7.03704 16.8906C3.15017 16.8906 0 20.0408 0 23.9277V30.9647H7.03704Z\"\n              fill=\"url(#paint2_linear)\"\n            />\n            <defs>\n              <linearGradient\n                id=\"paint0_linear\"\n                x1=\"14.6124\"\n                y1=\"0\"\n                x2=\"14.6124\"\n                y2=\"16.9356\"\n                gradientUnits=\"userSpaceOnUse\"\n              >\n                <stop stop-color=\"#78D9FF\" />\n                <stop offset=\"1\" stop-color=\"#04BEFE\" />\n              </linearGradient>\n              <linearGradient\n                id=\"paint1_linear\"\n                x1=\"22.5175\"\n                y1=\"16.8906\"\n                x2=\"22.5175\"\n                y2=\"30.9647\"\n                gradientUnits=\"userSpaceOnUse\"\n              >\n                <stop stop-color=\"#7A5AFF\" />\n                <stop offset=\"1\" stop-color=\"#9379FF\" />\n              </linearGradient>\n              <linearGradient\n                id=\"paint2_linear\"\n                x1=\"7.03704\"\n                y1=\"16.8906\"\n                x2=\"7.03704\"\n                y2=\"30.9647\"\n                gradientUnits=\"userSpaceOnUse\"\n              >\n                <stop stop-color=\"#7A5AFF\" />\n                <stop offset=\"1\" stop-color=\"#9379FF\" />\n              </linearGradient>\n            </defs>\n          </svg>\n        </NavLink>\n        <ul\n          // className=\"nav__items\"\n          className={this.state.menuOpen ? \"nav__items visible\" : \"nav__items\"}\n        >\n          <NavLink exact to=\"/\" style={{ textDecoration: \"none\" }}>\n            <li className=\"nav__items__item\">HOME</li>\n          </NavLink>\n          <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>\n            <li className=\"nav__items__item\">LOG IN</li>\n          </NavLink>\n          <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>\n            <li className=\"nav__items__item\">SIGN UP</li>\n          </NavLink>\n          {/* <li>\n            <button className=\"btn btn--talk-to-me\">Talk to me</button>\n          </li> */}\n        </ul>\n        <button\n          className={\n            this.state.menuOpen\n              ? \"nav__menu btn btn--menu open\"\n              : \"nav__menu btn btn--menu\"\n          }\n          onClick={this.toggleMenu}\n        >\n          {this.state.menuOpen ? \"Close\" : \"Menu\"}\n        </button>\n      </nav>\n      // </div>\n    );\n  }\n  toggleMenu = () => {\n    // let open = false;\n    // open = !this.state.menuOpen;\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n}\n\nexport default Navbar;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatNavigation.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatMain.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/Sidebar.js",["73","74"],"import React from \"react\";\n// import { disableRightMiddleClick } from \"../utilities/helper\";\nimport \"../main.scss\";\nimport \"./Sidebar.scss\";\nconst firebase = require(\"firebase\");\n\nclass Sidebar extends React.Component {\n  render() {\n    if (this.props.selectedChat === null) {\n      if (this.props.newChatFormVisible) {\n        return (\n          <div className=\"sidebar\">\n            {/* <img\n              className=\"sidebar__profile-picture\"\n              src={this.props.friendProfilePicture}\n              alt={`${this.props.friendName}'s profile picture`}\n            /> */}\n            <h1 className=\"sidebar__h1\">Start a conversation with a friend.</h1>\n            <h2 className=\"sidebar__h2\">\n              <a\n                href=\"https://github.com/camcgreen/chatbox\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Chatbox\n              </a>{\" \"}\n              can connect you with anyone from around the world\n            </h2>\n            <svg\n              className=\"sidebar__globe\"\n              width=\"200\"\n              height=\"200\"\n              viewBox=\"0 0 200 200\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g clip-path=\"url(#clip0)\">\n                <path\n                  d=\"M196.093 99.9996C196.093 46.9287 153.071 3.90625 99.9996 3.90625C46.9287 3.90625 3.90625 46.9287 3.90625 99.9996C3.90625 134.755 22.3577 165.201 49.9998 182.076C64.5662 190.969 81.6845 196.093 99.9996 196.093C153.071 196.093 196.093 153.071 196.093 99.9996Z\"\n                  fill=\"#221E41\"\n                />\n                <path\n                  d=\"M75.0818 110.369L11.5977 137.724C19.4929 156.202 33.0093 171.704 50.0006 182.077C59.3111 187.761 69.6654 191.902 80.7072 194.152L81.6861 193.456L88.6622 180.788H94.1575C100.29 180.788 105.261 175.817 105.261 169.685V164.293C105.261 161.937 106.01 159.643 107.4 157.742L92.1833 135.015L75.0818 110.369Z\"\n                  fill=\"#E5E7F1\"\n                />\n                <path\n                  d=\"M100 3.90625C81.4932 3.90625 64.2117 9.14295 49.5469 18.2085V20.6577L73.4148 29.7382C75.5366 30.5456 76.9089 32.6143 76.8272 34.8831C78.7491 40.4128 85.1167 42.9663 90.3272 40.2967L95.5127 37.5569C110.575 29.5991 128.386 41.7952 126.416 58.7162L126.368 59.1279C125.884 63.2884 122.932 66.6068 118.968 67.5427C116.388 68.1517 113.451 68.8521 110.934 69.4536C107.286 70.3259 104.476 73.2364 103.734 76.9134L100.381 93.5106C99.2037 99.3418 103.538 104.837 109.483 105.051L113.785 105.206C115.023 105.25 116.241 105.533 117.372 106.039L140.575 132.991L138.107 162.232C137.538 171.205 143.026 178.202 150.199 180.925L151.577 181.089C178.341 164.03 196.094 134.089 196.094 99.9996C196.094 46.9287 153.071 3.90625 100 3.90625Z\"\n                  fill=\"#E5E7F1\"\n                />\n                <path\n                  d=\"M74.9997 117.223C74.9997 97.5906 59.0849 81.6758 39.453 81.6758C19.821 81.6758 3.90625 97.5906 3.90625 117.223C3.90625 125.733 6.89843 133.544 11.8859 139.663H11.8836L39.453 175L66.8908 139.848H66.87C71.9485 133.701 74.9997 125.819 74.9997 117.223Z\"\n                  fill=\"#E6759E\"\n                />\n                <path\n                  d=\"M39.4531 136.539C49.8084 136.539 58.203 128.144 58.203 117.789C58.203 107.434 49.8084 99.0391 39.4531 99.0391C29.0978 99.0391 20.7031 107.434 20.7031 117.789C20.7031 128.144 29.0978 136.539 39.4531 136.539Z\"\n                  fill=\"#FAFAFF\"\n                />\n                <path\n                  d=\"M196.092 32.7472C196.092 16.8187 183.18 3.90625 167.251 3.90625C151.323 3.90625 138.41 16.8187 138.41 32.7472C138.41 39.6522 140.838 45.9893 144.885 50.9545H144.883L167.251 79.6255L189.513 51.1049H189.497C193.617 46.1174 196.092 39.7213 196.092 32.7472Z\"\n                  fill=\"#00ADFF\"\n                />\n                <path\n                  d=\"M167.254 45.7577C174.185 45.7577 179.805 40.1386 179.805 33.207C179.805 26.2754 174.185 20.6562 167.254 20.6562C160.322 20.6562 154.703 26.2754 154.703 33.207C154.703 40.1386 160.322 45.7577 167.254 45.7577Z\"\n                  fill=\"#FAFAFF\"\n                />\n                <path\n                  d=\"M5.89194 80.0809C6.2142 80.1626 6.53725 80.2016 6.85522 80.2016C8.60013 80.2016 10.19 79.0239 10.6388 77.2552L10.7732 76.7313C11.3181 74.6435 10.0673 72.5099 7.97982 71.9654C5.89233 71.4208 3.75875 72.6712 3.21383 74.7583C3.16383 74.9497 3.11461 75.1419 3.06617 75.3341C2.5357 77.4251 3.80093 79.5501 5.89194 80.0809Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M11.3666 62.6052C11.9049 62.8591 12.4717 62.979 13.0295 62.979C14.4947 62.979 15.8994 62.1509 16.5654 60.738C23.6353 45.7408 34.5345 33.2206 47.7563 24.128C47.8852 24.1944 48.018 24.2558 48.1567 24.3085L72.0242 33.3885C72.5832 33.6014 72.9437 34.1456 72.9222 34.7428C72.905 35.226 72.9777 35.7088 73.1363 36.1659C74.4238 39.8694 77.2495 42.8311 80.889 44.2905C84.5288 45.7494 88.6175 45.5608 92.1073 43.7733C92.1218 43.7658 92.1362 43.7584 92.1507 43.7506L97.3366 41.0108C103.104 37.9639 109.76 38.344 115.143 42.0295C120.526 45.7151 123.29 51.7838 122.535 58.2646L122.487 58.6759C122.194 61.1884 120.46 63.1763 118.069 63.7408C115.486 64.3509 112.544 65.0517 110.024 65.6544C104.916 66.8759 100.943 70.9915 99.9034 76.1399L96.551 92.7371C95.762 96.6426 96.7249 100.677 99.1924 103.806C101.66 106.935 105.359 108.811 109.341 108.955L113.643 109.109C114.383 109.136 115.101 109.303 115.777 109.605C116.295 109.837 116.836 109.947 117.369 109.947C118.862 109.946 120.288 109.086 120.937 107.634C121.818 105.664 120.935 103.354 118.966 102.473C117.369 101.759 115.672 101.365 113.924 101.302L109.622 101.148C107.937 101.087 106.371 100.293 105.327 98.9684C104.283 97.6441 103.875 95.9367 104.209 94.284L107.562 77.6868C108.001 75.5103 109.681 73.7696 111.841 73.2528C114.355 72.6517 117.289 71.9529 119.865 71.3443C125.408 70.0357 129.581 65.3079 130.248 59.5791L130.296 59.1677C131.392 49.7537 127.377 40.9373 119.557 35.5831C111.737 30.2296 102.066 29.6761 93.6874 34.1034L88.5257 36.8303C87.0319 37.5889 85.353 37.6635 83.7976 37.0389C82.4046 36.4803 81.3273 35.4495 80.7179 34.1053C80.4913 30.5327 78.2019 27.3804 74.8031 26.087L56.1446 18.9886C69.3988 11.8019 84.4323 7.81286 99.9991 7.81286C110.159 7.81286 120.141 9.45348 129.667 12.6898C131.71 13.3839 133.928 12.2906 134.622 10.2476C135.316 8.20505 134.223 5.9863 132.18 5.29217C121.843 1.78085 111.016 0 99.9991 0C80.6659 0 61.9051 5.52693 45.7446 15.9835C30.0072 26.1663 17.4736 40.4901 9.49865 57.4064C8.57912 59.358 9.41506 61.6857 11.3666 62.6052Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M191.282 69.6376C189.208 70.2337 188.011 72.3978 188.607 74.4712C190.982 82.7305 192.186 91.3192 192.186 99.9992C192.186 109.451 190.762 118.77 187.954 127.697C187.307 129.755 188.451 131.948 190.508 132.595C190.899 132.718 191.293 132.776 191.682 132.776C193.342 132.776 194.882 131.709 195.407 130.041C198.454 120.354 199.999 110.247 199.999 99.9992C199.999 90.5887 198.692 81.2735 196.115 72.3122C195.519 70.2388 193.354 69.0411 191.282 69.6376Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M185.195 144.74C183.547 143.764 181.078 144.039 179.797 146.188C179.79 146.201 179.782 146.213 179.775 146.226C178.518 148.389 179.477 150.682 181.13 151.648C181.716 151.991 182.404 152.176 183.105 152.176C184.382 152.176 185.701 151.562 186.52 150.17C187.789 148.013 186.843 145.715 185.195 144.74Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M174.229 161.153C172.622 159.715 170.152 159.851 168.713 161.459C163.376 167.422 157.33 172.604 150.765 176.932C146.26 174.898 141.541 170.076 142.003 162.518L144.468 133.32C144.65 131.171 143.054 129.281 140.904 129.099C138.756 128.924 136.865 130.513 136.683 132.663L134.215 161.904C134.213 161.931 134.211 161.958 134.209 161.985C133.717 169.736 137.166 176.953 143.135 181.45C129.974 188.417 115.181 192.187 99.9999 192.187C95.7496 192.187 91.514 191.891 87.3265 191.311L90.9699 184.695H94.157C102.434 184.695 109.167 177.962 109.167 169.686V164.294C109.167 162.757 109.646 161.288 110.553 160.047C111.826 158.306 111.446 155.861 109.704 154.588C107.962 153.316 105.518 153.695 104.246 155.438C102.354 158.026 101.355 161.088 101.355 164.294V169.686C101.355 173.654 98.1261 176.883 94.1574 176.883H88.6621C87.2383 176.883 85.9273 177.657 85.2406 178.905L79.2289 189.821C70.7977 187.877 62.6583 184.758 55.0978 180.533C53.2134 179.481 50.8345 180.154 49.7822 182.038C48.7298 183.921 49.4033 186.3 51.2864 187.353C66.093 195.627 82.9379 200 100 200C128.409 200 155.575 187.852 174.535 166.669C175.973 165.061 175.837 162.592 174.229 161.153Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M167.253 49.6639C176.326 49.6639 183.708 42.2819 183.708 33.2077C183.708 24.134 176.326 16.752 167.253 16.752C158.179 16.752 150.797 24.134 150.797 33.2077C150.797 42.2815 158.179 49.6639 167.253 49.6639ZM167.253 24.5644C172.019 24.5644 175.896 28.4418 175.896 33.2077C175.896 37.9737 172.019 41.8515 167.253 41.8515C162.487 41.8515 158.609 37.9737 158.609 33.2077C158.609 28.4418 162.487 24.5644 167.253 24.5644Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M70.1255 142.038C74.7278 136.354 77.6474 129.482 78.5809 122.266L88.9731 137.243C89.7317 138.336 90.9485 138.923 92.186 138.923C92.9543 138.923 93.7305 138.697 94.4094 138.226C96.182 136.996 96.6219 134.562 95.3918 132.789L78.2899 108.142C78.1118 107.886 77.9059 107.66 77.6829 107.461C73.3274 90.4125 57.8392 77.7695 39.453 77.7695C17.6988 77.7695 0 95.4683 0 117.222C0 126.233 3.116 135.037 8.77614 142.03C8.78512 142.042 8.7945 142.054 8.80387 142.066L36.3733 177.403C37.1135 178.352 38.2495 178.907 39.4526 178.907C40.6557 178.907 41.7916 178.352 42.5319 177.404L69.9696 142.252C70.0247 142.182 70.0763 142.111 70.1255 142.038ZM63.5865 137.734L39.4541 168.65L15.041 137.36C15.0003 137.304 14.9581 137.249 14.9144 137.195C10.3347 131.576 7.81247 124.483 7.81247 117.222C7.81247 99.7761 22.0062 85.582 39.453 85.582C56.8998 85.582 71.0935 99.7761 71.0935 117.222C71.0935 124.562 68.5239 131.713 63.8587 137.36C63.7599 137.48 63.6689 137.605 63.5865 137.734Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M39.453 95.1328C26.9605 95.1328 16.7969 105.296 16.7969 117.789C16.7969 130.282 26.9605 140.445 39.453 140.445C51.9456 140.445 62.1092 130.282 62.1092 117.789C62.1092 105.296 51.946 95.1328 39.453 95.1328ZM39.453 132.633C31.2683 132.633 24.6093 125.974 24.6093 117.789C24.6093 109.604 31.2683 102.945 39.453 102.945C47.6378 102.945 54.2967 109.604 54.2967 117.789C54.2967 125.974 47.6382 132.633 39.453 132.633Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M141.78 53.3279C141.787 53.3373 141.795 53.3474 141.803 53.3572L164.171 82.0278C164.912 82.9766 166.048 83.5313 167.251 83.5313C167.251 83.5313 167.251 83.5313 167.251 83.5313C168.454 83.5313 169.59 82.977 170.33 82.0286L192.592 53.508C192.64 53.4467 192.686 53.3846 192.73 53.3209C197.419 47.5174 199.998 40.2252 199.998 32.7471C199.998 14.6902 185.308 0 167.251 0C149.194 0 134.504 14.6902 134.504 32.7471C134.504 40.2213 137.087 47.5252 141.78 53.3279ZM167.251 7.81247C181 7.81247 192.186 18.9984 192.186 32.7471C192.186 38.5307 190.161 44.1662 186.485 48.6166C186.393 48.7275 186.308 48.8428 186.23 48.9615L167.252 73.2755L148.034 48.6424C147.995 48.5897 147.954 48.5373 147.912 48.4865C144.304 44.0588 142.316 38.469 142.316 32.7471C142.316 18.9984 153.502 7.81247 167.251 7.81247Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M74.1961 161.142L72.4301 161.977C70.4793 162.898 69.6453 165.226 70.5664 167.177C71.2336 168.589 72.6371 169.415 74.1012 169.415C74.6601 169.415 75.2281 169.295 75.7672 169.04L77.5332 168.206C79.4839 167.284 80.3179 164.956 79.3968 163.006C78.475 161.055 76.1469 160.222 74.1961 161.142Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M167.254 99.2578C165.097 99.2578 163.348 101.007 163.348 103.164C163.348 103.668 163.32 104.176 163.263 104.674C163.021 106.818 164.563 108.752 166.706 108.994C166.855 109.011 167.003 109.019 167.149 109.019C169.11 109.019 170.801 107.546 171.026 105.551C171.115 104.763 171.16 103.96 171.16 103.164C171.161 101.007 169.412 99.2578 167.254 99.2578Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M139.941 116.406C137.784 116.406 136.035 118.155 136.035 120.312C136.035 122.47 137.784 124.219 139.941 124.219H141.895C144.052 124.219 145.801 122.47 145.801 120.312C145.801 118.155 144.052 116.406 141.895 116.406H139.941Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M156.98 114.482C156.552 114.742 156.105 114.981 155.649 115.192C153.692 116.097 152.839 118.42 153.745 120.377C154.405 121.804 155.817 122.643 157.293 122.643C157.842 122.643 158.4 122.527 158.931 122.281C159.654 121.947 160.364 121.568 161.043 121.155C162.885 120.033 163.47 117.63 162.348 115.787C161.226 113.945 158.823 113.361 156.98 114.482Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M98.0724 140.438L97.0243 142.086C95.8669 143.907 96.4044 146.321 98.2251 147.479C98.8751 147.892 99.6001 148.089 100.317 148.089C101.609 148.089 102.873 147.449 103.617 146.278L104.665 144.63C105.822 142.809 105.285 140.395 103.464 139.237C101.644 138.08 99.2298 138.618 98.0724 140.438Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M112.894 124.403C111.074 123.246 108.659 123.783 107.502 125.603L106.454 127.252C105.297 129.072 105.834 131.486 107.655 132.644C108.305 133.057 109.03 133.254 109.747 133.254C111.039 133.254 112.302 132.614 113.047 131.443L114.095 129.795C115.252 127.974 114.714 125.561 112.894 124.403Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M90.0906 153.633L88.3246 154.467C86.3738 155.389 85.5398 157.717 86.4609 159.668C87.1281 161.079 88.5316 161.906 89.9957 161.906C90.5547 161.906 91.1226 161.785 91.6617 161.531L93.4277 160.697C95.3785 159.775 96.2125 157.447 95.2914 155.496C94.3691 153.545 92.041 152.712 90.0906 153.633Z\"\n                  fill=\"#404668\"\n                />\n                <path\n                  d=\"M122.363 116.406C120.206 116.406 118.457 118.155 118.457 120.312C118.457 122.47 120.206 124.219 122.363 124.219H124.316C126.474 124.219 128.223 122.47 128.223 120.312C128.223 118.155 126.474 116.406 124.316 116.406H122.363Z\"\n                  fill=\"#404668\"\n                />\n              </g>\n              <defs>\n                <clipPath id=\"clip0\">\n                  <rect width=\"200\" height=\"200\" fill=\"white\" />\n                </clipPath>\n              </defs>\n            </svg>\n\n            <div className=\"sidebar__empty\"></div>\n            <a\n              href=\"https://github.com/camcgreen/chatbox\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              <svg\n                width=\"64\"\n                height=\"64\"\n                viewBox=\"0 0 64 64\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"sidebar__github\"\n              >\n                <path\n                  d=\"M32 0C14.3307 0 0 14.328 0 32C0 46.1387 9.168 58.1333 21.8853 62.3653C23.4827 62.6613 24 61.6693 24 60.8267V54.8693C15.0987 56.8053 13.2453 51.0933 13.2453 51.0933C11.7893 47.3947 9.69067 46.4107 9.69067 46.4107C6.78667 44.424 9.912 44.4667 9.912 44.4667C13.1253 44.6907 14.816 47.7653 14.816 47.7653C17.6693 52.656 22.3013 51.2427 24.128 50.424C24.4133 48.3573 25.2427 46.944 26.16 46.1467C19.0533 45.3333 11.5813 42.5893 11.5813 30.3307C11.5813 26.8347 12.832 23.9813 14.8773 21.7413C14.5467 20.9333 13.4507 17.6773 15.1893 13.272C15.1893 13.272 17.8773 12.4133 23.992 16.552C26.544 15.8427 29.28 15.488 32 15.4747C34.72 15.488 37.4587 15.8427 40.016 16.552C46.1253 12.4133 48.808 13.272 48.808 13.272C50.5493 17.68 49.4533 20.936 49.1227 21.7413C51.176 23.9813 52.416 26.8373 52.416 30.3307C52.416 42.6213 44.9307 45.328 37.8053 46.12C38.952 47.112 40 49.0587 40 52.0453V60.8267C40 61.6773 40.512 62.6773 42.136 62.3627C54.8427 58.1253 64 46.1333 64 32C64 14.328 49.672 0 32 0Z\"\n                  fill=\"#221E41\"\n                />\n              </svg>\n            </a>\n          </div>\n        );\n      } else {\n        return <div className=\"sidebar\">No chat selected</div>;\n      }\n    } else {\n      return (\n        <div className=\"sidebar\">\n          <img\n            className=\"sidebar__profile-picture\"\n            src={this.props.friendProfilePicture}\n            alt={`${this.props.friendName}'s profile picture`}\n          />\n          <h1 className=\"sidebar__h1\">{this.props.friendName}</h1>\n          <h2 className=\"sidebar__h2\">{this.props.friendEmail}</h2>\n          <h3 className=\"sidebar__h3\">\n            Friends since{\" \"}\n            {this.getFormattedDate(new Date(this.props.friendsSince))}\n            {/* {new Date(this.props.friendsSince)} */}\n          </h3>\n          <div className=\"sidebar__empty\"></div>\n          <a\n            href=\"https://github.com/camcgreen/chatbox\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <svg\n              width=\"64\"\n              height=\"64\"\n              viewBox=\"0 0 64 64\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"sidebar__github\"\n            >\n              <path\n                d=\"M32 0C14.3307 0 0 14.328 0 32C0 46.1387 9.168 58.1333 21.8853 62.3653C23.4827 62.6613 24 61.6693 24 60.8267V54.8693C15.0987 56.8053 13.2453 51.0933 13.2453 51.0933C11.7893 47.3947 9.69067 46.4107 9.69067 46.4107C6.78667 44.424 9.912 44.4667 9.912 44.4667C13.1253 44.6907 14.816 47.7653 14.816 47.7653C17.6693 52.656 22.3013 51.2427 24.128 50.424C24.4133 48.3573 25.2427 46.944 26.16 46.1467C19.0533 45.3333 11.5813 42.5893 11.5813 30.3307C11.5813 26.8347 12.832 23.9813 14.8773 21.7413C14.5467 20.9333 13.4507 17.6773 15.1893 13.272C15.1893 13.272 17.8773 12.4133 23.992 16.552C26.544 15.8427 29.28 15.488 32 15.4747C34.72 15.488 37.4587 15.8427 40.016 16.552C46.1253 12.4133 48.808 13.272 48.808 13.272C50.5493 17.68 49.4533 20.936 49.1227 21.7413C51.176 23.9813 52.416 26.8373 52.416 30.3307C52.416 42.6213 44.9307 45.328 37.8053 46.12C38.952 47.112 40 49.0587 40 52.0453V60.8267C40 61.6773 40.512 62.6773 42.136 62.3627C54.8427 58.1253 64 46.1333 64 32C64 14.328 49.672 0 32 0Z\"\n                fill=\"#221E41\"\n              />\n            </svg>\n          </a>\n        </div>\n      );\n    }\n  }\n  getFormattedDate = (date) => {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n\n    return day + \"/\" + month + \"/\" + year;\n  };\n}\n\nexport default Sidebar;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/components/ChatInput.js",[],"/Users/camcgreen/Documents/web-dev/chatbox/src/components/NewChat.js",["75"],"import React from \"react\";\nimport \"../main.scss\";\nimport \"./NewChat.scss\";\n\nconst firebase = require(\"firebase\");\n\nclass NewChat extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null,\n      newChatError: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"new-chat\">\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"new-chat__back\"\n          onClick={this.props.toggleNav}\n        >\n          <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#F0F0F5\" />\n          <g clip-path=\"url(#clip0)\">\n            <path\n              d=\"M7.35627 9.50495L11.6561 5.20524C11.9296 4.93159 12.3731 4.93159 12.6465 5.20524C12.9199 5.47865 12.9199 5.9221 12.6465 6.19549L8.8418 10.0001L12.6464 13.8045C12.9198 14.078 12.9198 14.5214 12.6464 14.7949C12.373 15.0684 11.9295 15.0684 11.656 14.7949L7.35616 10.4951C7.21946 10.3583 7.15118 10.1792 7.15118 10.0001C7.15118 9.82085 7.21959 9.64165 7.35627 9.50495Z\"\n              fill=\"#221E41\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0\">\n              <rect\n                width=\"10\"\n                height=\"10\"\n                fill=\"white\"\n                transform=\"translate(15 15) rotate(-180)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n        <h1 className=\"new-chat__h1\">Start a new chat</h1>\n        <form className=\"new-chat__form\" onSubmit={this.handleFormSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"friend's email\"\n            onChange={(e) => this.handleUserInput(\"email\", e)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"enter your message...\"\n            onChange={(e) => this.handleUserInput(\"message\", e)}\n          />\n          <h4 className=\"error-text-new-chat\">\n            {this.state.newChatError ? this.state.newChatError : null}\n          </h4>\n          <button className=\"new-chat__submit btn btn--submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n  handleUserInput = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n    }\n  };\n  handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const userExists = await this.checkUserExists();\n    const notCurrentUser = this.state.email !== this.props.email;\n    const messageValid = this.messageValid(this.state.message);\n    if (userExists) {\n      if (notCurrentUser) {\n        if (messageValid) {\n          const chatExists = await this.checkChatExists();\n          chatExists ? this.navigateToChat() : this.createNewChat();\n        } else {\n          this.setState({ newChatError: \"Cannot send an empty message.\" });\n        }\n      } else {\n        this.setState({ newChatError: \"Cannot send a message to yourself\" });\n      }\n    } else {\n      this.setState({ newChatError: \"User does not exist.\" });\n    }\n  };\n  messageValid = (text) => text && text.replace(/\\s/g, \"\").length;\n  navigateToChat = () =>\n    this.props.navigateToChat(this.buildDocKey(), this.state.message);\n  createNewChat = () => {\n    this.props.createNewChat({\n      sendTo: this.state.email,\n      message: this.state.message,\n    });\n  };\n  buildDocKey = () => {\n    return [firebase.auth().currentUser.email, this.state.email]\n      .sort()\n      .join(\":\");\n  };\n  checkChatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  checkUserExists = async () => {\n    const snapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = snapshot.docs\n      .map((_doc) => _doc.data().email)\n      .includes(this.state.email);\n    return exists;\n  };\n}\n\nexport default NewChat;\n","/Users/camcgreen/Documents/web-dev/chatbox/src/utilities/helpers.js",[],{"ruleId":"76","severity":1,"message":"77","line":6,"column":32,"nodeType":"78","messageId":"79","endLine":6,"endColumn":38},{"ruleId":"76","severity":1,"message":"80","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":26},{"ruleId":"76","severity":1,"message":"81","line":25,"column":5,"nodeType":"78","messageId":"79","endLine":25,"endColumn":18},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"76","severity":1,"message":"86","line":4,"column":7,"nodeType":"78","messageId":"79","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":118,"column":7,"nodeType":"89","messageId":"90","endLine":137,"endColumn":8},{"ruleId":"76","severity":1,"message":"86","line":6,"column":7,"nodeType":"78","messageId":"79","endLine":6,"endColumn":15},{"ruleId":"76","severity":1,"message":"86","line":5,"column":7,"nodeType":"78","messageId":"79","endLine":5,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":170,"column":11,"nodeType":"93","endLine":174,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":67,"column":5,"nodeType":"89","messageId":"90","endLine":74,"endColumn":6},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'UserAuthentication' is defined but never used.","'initialLoaded' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'firebase' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]